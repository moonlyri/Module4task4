// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module4task4;
using Module4task4.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Module4task4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseHiLo(modelBuilder, "EntityFrameworkHiLoSequence");

            modelBuilder.HasSequence("EntityFrameworkHiLoSequence")
                .IncrementsBy(10);

            modelBuilder.Entity("Module4task4.CustomersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("City");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("CustomerId");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FirstName");

                    b.HasKey("Id");

                    b.ToTable("Id", (string)null);
                });

            modelBuilder.Entity("Module4task4.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Module4task4.OrderDetailsEntity", b =>
                {
                    b.Property<int?>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("OrderDetailId");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int?>("OrderDetailId"));

                    b.Property<int?>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("Count");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("OrderId");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("numeric")
                        .HasColumnName("Price");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductsEntityProductId")
                        .HasColumnType("integer");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductsEntityProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Module4task4.OrdersEntity", b =>
                {
                    b.Property<int?>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("OrderId");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int?>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("CustomerId");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("integer")
                        .HasColumnName("OrderNumber");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("integer")
                        .HasColumnName("PaymentId");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("numeric")
                        .HasColumnName("Price");

                    b.Property<int?>("ShippersId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShippersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Module4task4.PaymentEntity", b =>
                {
                    b.Property<int?>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("PaymentId");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int?>("PaymentId"));

                    b.Property<string>("Allowed")
                        .HasColumnType("text")
                        .HasColumnName("Allowed");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text")
                        .HasColumnName("PaymentType");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Module4task4.ProductsEntity", b =>
                {
                    b.Property<int?>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ProductId");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int?>("ProductId"));

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("numeric")
                        .HasColumnName("Price");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("text")
                        .HasColumnName("ProductDescription");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProductName");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Module4task4.ShippersEntity", b =>
                {
                    b.Property<int?>("ShippersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ShippersId");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int?>("ShippersId"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("CompanyName");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Phone")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("Phone");

                    b.HasKey("ShippersId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("Module4task4.SuppliersEntity", b =>
                {
                    b.Property<int?>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("SupplierId");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int?>("SupplierId"));

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("City");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("CompanyName");

                    b.Property<string>("ContactFullname")
                        .HasColumnType("text")
                        .HasColumnName("ContactFullName");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Module4task4.OrderDetailsEntity", b =>
                {
                    b.HasOne("Module4task4.OrdersEntity", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Module4task4.Models.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Module4task4.ProductsEntity", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductsEntityProductId");

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Module4task4.OrdersEntity", b =>
                {
                    b.HasOne("Module4task4.CustomersEntity", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Module4task4.PaymentEntity", "Payments")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Module4task4.ShippersEntity", "Shippers")
                        .WithMany("Orders")
                        .HasForeignKey("ShippersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Payments");

                    b.Navigation("Shippers");
                });

            modelBuilder.Entity("Module4task4.ProductsEntity", b =>
                {
                    b.HasOne("Module4task4.SuppliersEntity", "Suppliers")
                        .WithMany("Products")
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Module4task4.CustomersEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Module4task4.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Module4task4.OrdersEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Module4task4.PaymentEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Module4task4.ProductsEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Module4task4.ShippersEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Module4task4.SuppliersEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
